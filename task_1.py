# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()), который должен
# принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических # величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — # реализовать перегрузку метода str() для вывода матрицы в привычном виде. Далее реализовать
# перегрузку метода add() # для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом
# сложения должна быть новая # матрица. Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент
# первой строки первой матрицы # складываем с первым элементом первой строки второй матрицы и т.д.
from functools import reduce


class Matrix:

    def __init__(self, my_list):
        self.my_list = my_list

    def __str__(self):
        return 'Матрица:\n' + '\n'.join(' '.join(map(str, line)) for line in self.my_list) + '\n'

    def __add__(self, other):
        for i in range(0, len(self.my_list)):
            for l in range(0, len(self.my_list[i])):
                self.my_list[i][l] = self.my_list[i][l] + other.my_list[i][l]
        return Matrix(self.my_list)


my_matrix1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
my_matrix2 = [[10, 11, 12], [13, 14, 15], [16, 17, 18]]

m1 = Matrix(my_matrix1)
m2 = Matrix(my_matrix2)

print(m1)
print(m2)
print(m1 + m2)
